SELECT * 
FROM PortfolioProject..CovidDeaths$
ORDER BY 3,4

SELECT *
FROM PortfolioProject..CovidVaccinations$
ORDER BY 3, 4

SELECT LOCATION, DATE, total_cases, new_cases, total_deaths, population
FROM	PortfolioProject..CovidDeaths$
ORDER BY 1, 2

--	total cases vs total deaths
-- shows the fatality rate of COVID
SELECT LOCATION, DATE, total_cases, total_deaths, (total_deaths/total_cases) * 100 AS DeathPercentage
FROM	PortfolioProject..CovidDeaths$
WHERE location = 'United States'
ORDER BY 1, 2

-- percentage of population that contracted COVID
SELECT LOCATION, DATE, total_cases, population, (total_cases/population) * 100 AS InfectedPercentage
FROM	PortfolioProject..CovidDeaths$
--WHERE location = 'United States'
ORDER BY 1, 2

-- ranking countries by infected percentage
SELECT LOCATION, max(total_cases) AS HighestInfectionCount, population, MAX((total_cases/population)) * 100 AS InfectedPercentage
FROM	PortfolioProject..CovidDeaths$
GROUP BY  location, population
ORDER BY InfectedPercentage DESC

-- Ranking countries by Death count
Select Location, MAX(cast(Total_deaths as int)) as TotalDeathCount
From PortfolioProject..CovidDeaths$
Where continent is not null 
Group by Location
order by TotalDeathCount desc


-- Ranking continent by Death count
Select continent, MAX(cast(Total_deaths as int)) as TotalDeathCount
From PortfolioProject..CovidDeaths$
Where continent is not null 
Group by continent
order by TotalDeathCount desc


-- Continent with highest death count by population
Select continent, MAX(cast(Total_deaths as int)) AS totalDeaths,max(population) AS Population , (MAX(cast(Total_deaths as int))/max(population)) * 100 as DeathCountPerPopulation
From PortfolioProject..CovidDeaths$
Where continent is not null 
Group by continent
order by DeathCountPerPopulation DESC

--GLOBALY
Select SUM(new_cases) as total_cases, SUM(cast(new_deaths as int)) as total_deaths, SUM(cast(new_deaths as int))/SUM(New_Cases)*100 as DeathPercentage
From PortfolioProject..CovidDeaths$
where continent is not null 
order by 1,2


-- Shows Percentage of Population that has recieved at least one Covid Vaccine
Select dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations
, SUM(CONVERT(int,vac.new_vaccinations)) OVER (Partition by dea.Location Order by dea.location, dea.Date) as RollingPeopleVaccinated
--, (RollingPeopleVaccinated/population)*100
From PortfolioProject..CovidDeaths$ dea
Join PortfolioProject..CovidVaccinations$ vac
	On dea.location = vac.location
	and dea.date = vac.date
where dea.continent is not null 
order by 2,3



-- Using CTE to performe the same qurey above

With PopvsVac (Continent, Location, Date, Population, New_Vaccinations, RollingPeopleVaccinated)
as
(
Select dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations
, SUM(CONVERT(int,vac.new_vaccinations)) OVER (Partition by dea.Location Order by dea.location, dea.Date) as RollingPeopleVaccinated
--, (RollingPeopleVaccinated/population)*100
From PortfolioProject..CovidDeaths$ dea
Join PortfolioProject..CovidVaccinations$ vac
	On dea.location = vac.location
	and dea.date = vac.date
where dea.continent is not null 
--order by 2,3
)
Select *, (RollingPeopleVaccinated/Population)*100
From PopvsVac



-- Using Temp Table to to performe the same qurey above

DROP Table if exists #PercentPopulationVaccinated
Create Table #PercentPopulationVaccinated
(
Continent nvarchar(255),
Location nvarchar(255),
Date datetime,
Population numeric,
New_vaccinations numeric,
RollingPeopleVaccinated numeric
)
Insert into #PercentPopulationVaccinated
Select dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations
, SUM(CONVERT(int,vac.new_vaccinations)) OVER (Partition by dea.Location Order by dea.location, dea.Date) as RollingPeopleVaccinated
--, (RollingPeopleVaccinated/population)*100
From PortfolioProject..CovidDeaths$ dea
Join PortfolioProject..CovidVaccinations$ vac
	On dea.location = vac.location
	and dea.date = vac.date
--where dea.continent is not null 
--order by 2,3

Select *, (RollingPeopleVaccinated/Population)*100
From #PercentPopulationVaccinated



-- Creating View to store data for later visualizations

Create View PercentPopulationVaccinated as
Select dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations
, SUM(CONVERT(int,vac.new_vaccinations)) OVER (Partition by dea.Location Order by dea.location, dea.Date) as RollingPeopleVaccinated
--, (RollingPeopleVaccinated/population)*100
From PortfolioProject..CovidDeaths$ dea
Join PortfolioProject..CovidVaccinations$ vac
	On dea.location = vac.location
	and dea.date = vac.date
where dea.continent is not null 